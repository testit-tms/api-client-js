/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AttachmentApiResult } from './attachmentApiResult';
import { AutoTestModel } from './autoTestModel';
import { AutoTestStepResultsApiResult } from './autoTestStepResultsApiResult';
import { LinkApiResult } from './linkApiResult';
import { StepCommentApiResult } from './stepCommentApiResult';
import { TestPointShortApiResult } from './testPointShortApiResult';
import { TestResultFailureClassApiResult } from './testResultFailureClassApiResult';
import { TestStatusApiResult } from './testStatusApiResult';

export class TestResultApiResult {
    'id': string;
    'startedOn'?: Date | null;
    'completedOn'?: Date | null;
    'durationInMs'?: number | null;
    'traces'?: string | null;
    'failureType'?: string | null;
    'message'?: string | null;
    'runByUserId'?: string | null;
    'stoppedByUserId'?: string | null;
    'outcome': string;
    'autoTestId'?: string | null;
    'testPointId'?: string | null;
    'testRunId': string;
    'configurationId': string;
    'status': TestStatusApiResult;
    'testPoint'?: TestPointShortApiResult | null;
    'autoTest'?: AutoTestModel | null;
    'autoTestStepResults'?: Array<AutoTestStepResultsApiResult> | null;
    'setupResults'?: Array<AutoTestStepResultsApiResult> | null;
    'teardownResults'?: Array<AutoTestStepResultsApiResult> | null;
    'workItemVersionId'?: string | null;
    'workItemVersionNumber'?: number | null;
    'attachments': Array<AttachmentApiResult>;
    'links': Array<LinkApiResult>;
    'failureClasses': Array<TestResultFailureClassApiResult>;
    'stepComments'?: Array<StepCommentApiResult> | null;
    'parameters'?: { [key: string]: string; } | null;
    'properties'?: { [key: string]: string; } | null;
    'createdDate': Date;
    'modifiedDate'?: Date | null;
    'createdById': string;
    'modifiedById'?: string | null;
    'isDeleted': boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "startedOn",
            "baseName": "startedOn",
            "type": "Date"
        },
        {
            "name": "completedOn",
            "baseName": "completedOn",
            "type": "Date"
        },
        {
            "name": "durationInMs",
            "baseName": "durationInMs",
            "type": "number"
        },
        {
            "name": "traces",
            "baseName": "traces",
            "type": "string"
        },
        {
            "name": "failureType",
            "baseName": "failureType",
            "type": "string"
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string"
        },
        {
            "name": "runByUserId",
            "baseName": "runByUserId",
            "type": "string"
        },
        {
            "name": "stoppedByUserId",
            "baseName": "stoppedByUserId",
            "type": "string"
        },
        {
            "name": "outcome",
            "baseName": "outcome",
            "type": "string"
        },
        {
            "name": "autoTestId",
            "baseName": "autoTestId",
            "type": "string"
        },
        {
            "name": "testPointId",
            "baseName": "testPointId",
            "type": "string"
        },
        {
            "name": "testRunId",
            "baseName": "testRunId",
            "type": "string"
        },
        {
            "name": "configurationId",
            "baseName": "configurationId",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "TestStatusApiResult"
        },
        {
            "name": "testPoint",
            "baseName": "testPoint",
            "type": "TestPointShortApiResult"
        },
        {
            "name": "autoTest",
            "baseName": "autoTest",
            "type": "AutoTestModel"
        },
        {
            "name": "autoTestStepResults",
            "baseName": "autoTestStepResults",
            "type": "Array<AutoTestStepResultsApiResult>"
        },
        {
            "name": "setupResults",
            "baseName": "setupResults",
            "type": "Array<AutoTestStepResultsApiResult>"
        },
        {
            "name": "teardownResults",
            "baseName": "teardownResults",
            "type": "Array<AutoTestStepResultsApiResult>"
        },
        {
            "name": "workItemVersionId",
            "baseName": "workItemVersionId",
            "type": "string"
        },
        {
            "name": "workItemVersionNumber",
            "baseName": "workItemVersionNumber",
            "type": "number"
        },
        {
            "name": "attachments",
            "baseName": "attachments",
            "type": "Array<AttachmentApiResult>"
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<LinkApiResult>"
        },
        {
            "name": "failureClasses",
            "baseName": "failureClasses",
            "type": "Array<TestResultFailureClassApiResult>"
        },
        {
            "name": "stepComments",
            "baseName": "stepComments",
            "type": "Array<StepCommentApiResult>"
        },
        {
            "name": "parameters",
            "baseName": "parameters",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "createdDate",
            "baseName": "createdDate",
            "type": "Date"
        },
        {
            "name": "modifiedDate",
            "baseName": "modifiedDate",
            "type": "Date"
        },
        {
            "name": "createdById",
            "baseName": "createdById",
            "type": "string"
        },
        {
            "name": "modifiedById",
            "baseName": "modifiedById",
            "type": "string"
        },
        {
            "name": "isDeleted",
            "baseName": "isDeleted",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return TestResultApiResult.attributeTypeMap;
    }
}

