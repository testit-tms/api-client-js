/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TestPointSelector model module.
 * @module model/TestPointSelector
 * @version 2.0.0
 */
class TestPointSelector {
    /**
     * Constructs a new <code>TestPointSelector</code>.
     * @alias module:model/TestPointSelector
     * @param configurationId {String} Specifies the configuration GUIDs, from which test points are created. You can specify several GUIDs.
     * @param workitemIds {Array.<String>} Specifies the work item GUIDs, from which test points are created. You can specify several GUIDs.
     */
    constructor(configurationId, workitemIds) { 
        
        TestPointSelector.initialize(this, configurationId, workitemIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, configurationId, workitemIds) { 
        obj['configurationId'] = configurationId;
        obj['workitemIds'] = workitemIds;
    }

    /**
     * Constructs a <code>TestPointSelector</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestPointSelector} obj Optional instance to populate.
     * @return {module:model/TestPointSelector} The populated <code>TestPointSelector</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestPointSelector();

            if (data.hasOwnProperty('configurationId')) {
                obj['configurationId'] = ApiClient.convertToType(data['configurationId'], 'String');
            }
            if (data.hasOwnProperty('workitemIds')) {
                obj['workitemIds'] = ApiClient.convertToType(data['workitemIds'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * Specifies the configuration GUIDs, from which test points are created. You can specify several GUIDs.
 * @member {String} configurationId
 */
TestPointSelector.prototype['configurationId'] = undefined;

/**
 * Specifies the work item GUIDs, from which test points are created. You can specify several GUIDs.
 * @member {Array.<String>} workitemIds
 */
TestPointSelector.prototype['workitemIds'] = undefined;






export default TestPointSelector;

