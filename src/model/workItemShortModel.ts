/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { IterationModel } from './iterationModel';
import { LinkShortModel } from './linkShortModel';
import { WorkItemPriorityModel } from './workItemPriorityModel';
import { WorkItemStates } from './workItemStates';

export class WorkItemShortModel {
    /**
    * Work Item internal unique identifier
    */
    'id': string;
    /**
    * Work Item version identifier
    */
    'versionId': string;
    /**
    * Work Item name
    */
    'name': string;
    /**
    * Work Item type. Possible values: CheckLists, SharedSteps, TestCases
    */
    'entityTypeName': string;
    /**
    * Project unique identifier
    */
    'projectId': string;
    /**
    * Identifier of Section where Work Item is located
    */
    'sectionId': string;
    /**
    * Section name of Work Item
    */
    'sectionName': string;
    /**
    * Boolean flag determining whether Work Item is automated
    */
    'isAutomated': boolean;
    /**
    * Work Item global identifier
    */
    'globalId': number;
    /**
    * Work Item duration
    */
    'duration': number;
    /**
    * Work Item median duration
    */
    'medianDuration'?: number | null;
    /**
    * Work Item attributes
    */
    'attributes'?: { [key: string]: any; } | null;
    /**
    * Unique identifier of user who created Work Item
    */
    'createdById': string;
    /**
    * Unique identifier of user who applied the latest modification of Work Item
    */
    'modifiedById'?: string | null;
    /**
    * Date and time of Work Item creation
    */
    'createdDate'?: Date | null;
    /**
    * Date and time of the latest modification of Work Item
    */
    'modifiedDate'?: Date | null;
    'state': WorkItemStates;
    'priority': WorkItemPriorityModel;
    /**
    * Flag determining whether Work Item is deleted
    */
    'isDeleted': boolean;
    /**
    * Array of tag names of Work Item
    */
    'tagNames'?: Array<string> | null;
    /**
    * Set of iterations related to Work Item
    */
    'iterations'?: Array<IterationModel> | null;
    /**
    * Set of links related to Work Item
    */
    'links'?: Array<LinkShortModel> | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "versionId",
            "baseName": "versionId",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "entityTypeName",
            "baseName": "entityTypeName",
            "type": "string"
        },
        {
            "name": "projectId",
            "baseName": "projectId",
            "type": "string"
        },
        {
            "name": "sectionId",
            "baseName": "sectionId",
            "type": "string"
        },
        {
            "name": "sectionName",
            "baseName": "sectionName",
            "type": "string"
        },
        {
            "name": "isAutomated",
            "baseName": "isAutomated",
            "type": "boolean"
        },
        {
            "name": "globalId",
            "baseName": "globalId",
            "type": "number"
        },
        {
            "name": "duration",
            "baseName": "duration",
            "type": "number"
        },
        {
            "name": "medianDuration",
            "baseName": "medianDuration",
            "type": "number"
        },
        {
            "name": "attributes",
            "baseName": "attributes",
            "type": "{ [key: string]: any; }"
        },
        {
            "name": "createdById",
            "baseName": "createdById",
            "type": "string"
        },
        {
            "name": "modifiedById",
            "baseName": "modifiedById",
            "type": "string"
        },
        {
            "name": "createdDate",
            "baseName": "createdDate",
            "type": "Date"
        },
        {
            "name": "modifiedDate",
            "baseName": "modifiedDate",
            "type": "Date"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "WorkItemStates"
        },
        {
            "name": "priority",
            "baseName": "priority",
            "type": "WorkItemPriorityModel"
        },
        {
            "name": "isDeleted",
            "baseName": "isDeleted",
            "type": "boolean"
        },
        {
            "name": "tagNames",
            "baseName": "tagNames",
            "type": "Array<string>"
        },
        {
            "name": "iterations",
            "baseName": "iterations",
            "type": "Array<IterationModel>"
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<LinkShortModel>"
        }    ];

    static getAttributeTypeMap() {
        return WorkItemShortModel.attributeTypeMap;
    }
}

export namespace WorkItemShortModel {
}
