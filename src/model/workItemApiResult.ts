/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AttachmentModel } from './attachmentModel';
import { AutoTestModel } from './autoTestModel';
import { IterationModel } from './iterationModel';
import { LinkModel } from './linkModel';
import { StepModel } from './stepModel';
import { TagModel } from './tagModel';
import { WorkItemEntityTypeApiModel } from './workItemEntityTypeApiModel';
import { WorkItemPriorityApiModel } from './workItemPriorityApiModel';
import { WorkItemSourceTypeApiModel } from './workItemSourceTypeApiModel';
import { WorkItemStateApiModel } from './workItemStateApiModel';

export class WorkItemApiResult {
    /**
    * Unique identifier of the work item
    */
    'id': string;
    /**
    * Global identifier of the work item
    */
    'globalId': number;
    /**
    * Version identifier of the work item
    */
    'versionId': string;
    /**
    * Version number of the work item
    */
    'versionNumber': number;
    /**
    * Unique identifier of the project
    */
    'projectId': string;
    /**
    * Unique identifier of the section within a project
    */
    'sectionId': string;
    /**
    * Name of the work item
    */
    'name': string;
    /**
    * Description of the work item
    */
    'description'?: string | null;
    /**
    * Source type of the work item
    */
    'sourceType': WorkItemSourceTypeApiModel;
    /**
    * Type of entity associated with this work item
    */
    'entityTypeName': WorkItemEntityTypeApiModel;
    /**
    * Duration of the work item in milliseconds
    */
    'duration': number;
    /**
    * Median duration of the work item in milliseconds
    */
    'medianDuration': number;
    /**
    * State of the work item
    */
    'state': WorkItemStateApiModel;
    /**
    * Priority level of the work item
    */
    'priority': WorkItemPriorityApiModel;
    'isAutomated': boolean;
    /**
    * Set of custom attributes associated with the work item
    */
    'attributes': { [key: string]: any; };
    /**
    * Set of tags applied to the work item
    */
    'tags': Array<TagModel>;
    /**
    * Set of section precondition steps that need to be executed before starting the work item steps
    */
    'sectionPreconditionSteps': Array<StepModel>;
    /**
    * Set of section postcondition steps that need to be executed after completing the work item steps
    */
    'sectionPostconditionSteps': Array<StepModel>;
    /**
    * Set of precondition steps that need to be executed before starting the main steps
    */
    'preconditionSteps': Array<StepModel>;
    /**
    * Main steps or actions defined for the work item
    */
    'steps': Array<StepModel>;
    /**
    * Set of postcondition steps that are executed after completing the main steps
    */
    'postconditionSteps': Array<StepModel>;
    /**
    * Associated iterations linked to the work item
    */
    'iterations': Array<IterationModel>;
    /**
    * Automated tests associated with the work item
    */
    'autoTests': Array<AutoTestModel>;
    /**
    * Files attached to the work item
    */
    'attachments': Array<AttachmentModel>;
    /**
    * Set of links related to the work item
    */
    'links': Array<LinkModel>;
    /**
    * Creation date of the work item
    */
    'createdDate': Date;
    /**
    * Unique identifier of the work item creator
    */
    'createdById': string;
    /**
    * Modification date of the work item
    */
    'modifiedDate'?: Date | null;
    /**
    * Unique identifier of the work item modifier
    */
    'modifiedById'?: string | null;
    /**
    * Indicates whether the work item is marked as deleted
    */
    'isDeleted': boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "globalId",
            "baseName": "globalId",
            "type": "number"
        },
        {
            "name": "versionId",
            "baseName": "versionId",
            "type": "string"
        },
        {
            "name": "versionNumber",
            "baseName": "versionNumber",
            "type": "number"
        },
        {
            "name": "projectId",
            "baseName": "projectId",
            "type": "string"
        },
        {
            "name": "sectionId",
            "baseName": "sectionId",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "sourceType",
            "baseName": "sourceType",
            "type": "WorkItemSourceTypeApiModel"
        },
        {
            "name": "entityTypeName",
            "baseName": "entityTypeName",
            "type": "WorkItemEntityTypeApiModel"
        },
        {
            "name": "duration",
            "baseName": "duration",
            "type": "number"
        },
        {
            "name": "medianDuration",
            "baseName": "medianDuration",
            "type": "number"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "WorkItemStateApiModel"
        },
        {
            "name": "priority",
            "baseName": "priority",
            "type": "WorkItemPriorityApiModel"
        },
        {
            "name": "isAutomated",
            "baseName": "isAutomated",
            "type": "boolean"
        },
        {
            "name": "attributes",
            "baseName": "attributes",
            "type": "{ [key: string]: any; }"
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<TagModel>"
        },
        {
            "name": "sectionPreconditionSteps",
            "baseName": "sectionPreconditionSteps",
            "type": "Array<StepModel>"
        },
        {
            "name": "sectionPostconditionSteps",
            "baseName": "sectionPostconditionSteps",
            "type": "Array<StepModel>"
        },
        {
            "name": "preconditionSteps",
            "baseName": "preconditionSteps",
            "type": "Array<StepModel>"
        },
        {
            "name": "steps",
            "baseName": "steps",
            "type": "Array<StepModel>"
        },
        {
            "name": "postconditionSteps",
            "baseName": "postconditionSteps",
            "type": "Array<StepModel>"
        },
        {
            "name": "iterations",
            "baseName": "iterations",
            "type": "Array<IterationModel>"
        },
        {
            "name": "autoTests",
            "baseName": "autoTests",
            "type": "Array<AutoTestModel>"
        },
        {
            "name": "attachments",
            "baseName": "attachments",
            "type": "Array<AttachmentModel>"
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<LinkModel>"
        },
        {
            "name": "createdDate",
            "baseName": "createdDate",
            "type": "Date"
        },
        {
            "name": "createdById",
            "baseName": "createdById",
            "type": "string"
        },
        {
            "name": "modifiedDate",
            "baseName": "modifiedDate",
            "type": "Date"
        },
        {
            "name": "modifiedById",
            "baseName": "modifiedById",
            "type": "string"
        },
        {
            "name": "isDeleted",
            "baseName": "isDeleted",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return WorkItemApiResult.attributeTypeMap;
    }
}

export namespace WorkItemApiResult {
}
