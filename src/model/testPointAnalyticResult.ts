/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { TestPlanGroupByStatus } from './testPlanGroupByStatus';
import { TestPlanGroupByTestSuite } from './testPlanGroupByTestSuite';
import { TestPlanGroupByTester } from './testPlanGroupByTester';
import { TestPlanGroupByTesterAndStatus } from './testPlanGroupByTesterAndStatus';

export class TestPointAnalyticResult {
    'countGroupByStatus'?: Array<TestPlanGroupByStatus> | null;
    'sumGroupByTester'?: Array<TestPlanGroupByTester> | null;
    'countGroupByTester'?: Array<TestPlanGroupByTester> | null;
    'countGroupByTestSuite'?: Array<TestPlanGroupByTestSuite> | null;
    'countGroupByTesterAndStatus'?: Array<TestPlanGroupByTesterAndStatus> | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "countGroupByStatus",
            "baseName": "countGroupByStatus",
            "type": "Array<TestPlanGroupByStatus>"
        },
        {
            "name": "sumGroupByTester",
            "baseName": "sumGroupByTester",
            "type": "Array<TestPlanGroupByTester>"
        },
        {
            "name": "countGroupByTester",
            "baseName": "countGroupByTester",
            "type": "Array<TestPlanGroupByTester>"
        },
        {
            "name": "countGroupByTestSuite",
            "baseName": "countGroupByTestSuite",
            "type": "Array<TestPlanGroupByTestSuite>"
        },
        {
            "name": "countGroupByTesterAndStatus",
            "baseName": "countGroupByTesterAndStatus",
            "type": "Array<TestPlanGroupByTesterAndStatus>"
        }    ];

    static getAttributeTypeMap() {
        return TestPointAnalyticResult.attributeTypeMap;
    }
}

