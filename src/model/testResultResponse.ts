/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Attachment } from './attachment';
import { AutoTest } from './autoTest';
import { AutoTestStepResult } from './autoTestStepResult';
import { Link } from './link';
import { StepComment } from './stepComment';
import { StepResult } from './stepResult';
import { TestPoint } from './testPoint';
import { TestResultOutcome } from './testResultOutcome';
import { TestStatus } from './testStatus';

export class TestResultResponse {
    'id': string;
    'createdDate': Date;
    'modifiedDate'?: Date | null;
    'createdById': string;
    'modifiedById'?: string | null;
    'stepComments'?: Array<StepComment> | null;
    'failureClassIds': Array<string>;
    /**
    * @deprecated
    */
    'outcome'?: TestResultOutcome | null;
    'status'?: TestStatus | null;
    'comment'?: string | null;
    'links'?: Array<Link> | null;
    'stepResults'?: Array<StepResult> | null;
    'attachments'?: Array<Attachment> | null;
    'autoTestId'?: string | null;
    'configurationId': string;
    'startedOn'?: Date | null;
    'completedOn'?: Date | null;
    'durationInMs'?: number | null;
    'traces'?: string | null;
    'failureType'?: string | null;
    'message'?: string | null;
    'runByUserId'?: string | null;
    'stoppedByUserId'?: string | null;
    'testPointId': string;
    'testRunId': string;
    'testPoint'?: TestPoint | null;
    'autoTest'?: AutoTest | null;
    'autoTestStepResults'?: Array<AutoTestStepResult> | null;
    'setupResults'?: Array<AutoTestStepResult> | null;
    'teardownResults'?: Array<AutoTestStepResult> | null;
    'workItemVersionId': string;
    'workItemVersionNumber'?: number | null;
    'parameters'?: { [key: string]: string; } | null;
    'properties'?: { [key: string]: string; } | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "createdDate",
            "baseName": "createdDate",
            "type": "Date"
        },
        {
            "name": "modifiedDate",
            "baseName": "modifiedDate",
            "type": "Date"
        },
        {
            "name": "createdById",
            "baseName": "createdById",
            "type": "string"
        },
        {
            "name": "modifiedById",
            "baseName": "modifiedById",
            "type": "string"
        },
        {
            "name": "stepComments",
            "baseName": "stepComments",
            "type": "Array<StepComment>"
        },
        {
            "name": "failureClassIds",
            "baseName": "failureClassIds",
            "type": "Array<string>"
        },
        {
            "name": "outcome",
            "baseName": "outcome",
            "type": "TestResultOutcome"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "TestStatus"
        },
        {
            "name": "comment",
            "baseName": "comment",
            "type": "string"
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<Link>"
        },
        {
            "name": "stepResults",
            "baseName": "stepResults",
            "type": "Array<StepResult>"
        },
        {
            "name": "attachments",
            "baseName": "attachments",
            "type": "Array<Attachment>"
        },
        {
            "name": "autoTestId",
            "baseName": "autoTestId",
            "type": "string"
        },
        {
            "name": "configurationId",
            "baseName": "configurationId",
            "type": "string"
        },
        {
            "name": "startedOn",
            "baseName": "startedOn",
            "type": "Date"
        },
        {
            "name": "completedOn",
            "baseName": "completedOn",
            "type": "Date"
        },
        {
            "name": "durationInMs",
            "baseName": "durationInMs",
            "type": "number"
        },
        {
            "name": "traces",
            "baseName": "traces",
            "type": "string"
        },
        {
            "name": "failureType",
            "baseName": "failureType",
            "type": "string"
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string"
        },
        {
            "name": "runByUserId",
            "baseName": "runByUserId",
            "type": "string"
        },
        {
            "name": "stoppedByUserId",
            "baseName": "stoppedByUserId",
            "type": "string"
        },
        {
            "name": "testPointId",
            "baseName": "testPointId",
            "type": "string"
        },
        {
            "name": "testRunId",
            "baseName": "testRunId",
            "type": "string"
        },
        {
            "name": "testPoint",
            "baseName": "testPoint",
            "type": "TestPoint"
        },
        {
            "name": "autoTest",
            "baseName": "autoTest",
            "type": "AutoTest"
        },
        {
            "name": "autoTestStepResults",
            "baseName": "autoTestStepResults",
            "type": "Array<AutoTestStepResult>"
        },
        {
            "name": "setupResults",
            "baseName": "setupResults",
            "type": "Array<AutoTestStepResult>"
        },
        {
            "name": "teardownResults",
            "baseName": "teardownResults",
            "type": "Array<AutoTestStepResult>"
        },
        {
            "name": "workItemVersionId",
            "baseName": "workItemVersionId",
            "type": "string"
        },
        {
            "name": "workItemVersionNumber",
            "baseName": "workItemVersionNumber",
            "type": "number"
        },
        {
            "name": "parameters",
            "baseName": "parameters",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "{ [key: string]: string; }"
        }    ];

    static getAttributeTypeMap() {
        return TestResultResponse.attributeTypeMap;
    }
}

export namespace TestResultResponse {
}
