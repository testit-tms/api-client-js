/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WorkItemPriorityModel from './WorkItemPriorityModel';
import WorkItemStates from './WorkItemStates';

/**
 * The WorkItemFilterModel model module.
 * @module model/WorkItemFilterModel
 * @version 2.0.0
 */
class WorkItemFilterModel {
    /**
     * Constructs a new <code>WorkItemFilterModel</code>.
     * Collection of filters to apply to search
     * @alias module:model/WorkItemFilterModel
     */
    constructor() { 
        
        WorkItemFilterModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkItemFilterModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkItemFilterModel} obj Optional instance to populate.
     * @return {module:model/WorkItemFilterModel} The populated <code>WorkItemFilterModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkItemFilterModel();

            if (data.hasOwnProperty('nameOrId')) {
                obj['nameOrId'] = ApiClient.convertToType(data['nameOrId'], 'String');
            }
            if (data.hasOwnProperty('includeIds')) {
                obj['includeIds'] = ApiClient.convertToType(data['includeIds'], ['String']);
            }
            if (data.hasOwnProperty('excludeIds')) {
                obj['excludeIds'] = ApiClient.convertToType(data['excludeIds'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('globalIds')) {
                obj['globalIds'] = ApiClient.convertToType(data['globalIds'], ['Number']);
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': ['String']});
            }
            if (data.hasOwnProperty('isDeleted')) {
                obj['isDeleted'] = ApiClient.convertToType(data['isDeleted'], 'Boolean');
            }
            if (data.hasOwnProperty('projectIds')) {
                obj['projectIds'] = ApiClient.convertToType(data['projectIds'], ['String']);
            }
            if (data.hasOwnProperty('sectionIds')) {
                obj['sectionIds'] = ApiClient.convertToType(data['sectionIds'], ['String']);
            }
            if (data.hasOwnProperty('createdByIds')) {
                obj['createdByIds'] = ApiClient.convertToType(data['createdByIds'], ['String']);
            }
            if (data.hasOwnProperty('modifiedByIds')) {
                obj['modifiedByIds'] = ApiClient.convertToType(data['modifiedByIds'], ['String']);
            }
            if (data.hasOwnProperty('states')) {
                obj['states'] = ApiClient.convertToType(data['states'], [WorkItemStates]);
            }
            if (data.hasOwnProperty('priorities')) {
                obj['priorities'] = ApiClient.convertToType(data['priorities'], [WorkItemPriorityModel]);
            }
            if (data.hasOwnProperty('entityTypes')) {
                obj['entityTypes'] = ApiClient.convertToType(data['entityTypes'], ['String']);
            }
            if (data.hasOwnProperty('createdDateMinimal')) {
                obj['createdDateMinimal'] = ApiClient.convertToType(data['createdDateMinimal'], 'Date');
            }
            if (data.hasOwnProperty('createdDateMaximal')) {
                obj['createdDateMaximal'] = ApiClient.convertToType(data['createdDateMaximal'], 'Date');
            }
            if (data.hasOwnProperty('modifiedDateMinimal')) {
                obj['modifiedDateMinimal'] = ApiClient.convertToType(data['modifiedDateMinimal'], 'Date');
            }
            if (data.hasOwnProperty('modifiedDateMaximal')) {
                obj['modifiedDateMaximal'] = ApiClient.convertToType(data['modifiedDateMaximal'], 'Date');
            }
            if (data.hasOwnProperty('durationMinimal')) {
                obj['durationMinimal'] = ApiClient.convertToType(data['durationMinimal'], 'Number');
            }
            if (data.hasOwnProperty('durationMaximal')) {
                obj['durationMaximal'] = ApiClient.convertToType(data['durationMaximal'], 'Number');
            }
            if (data.hasOwnProperty('isAutomated')) {
                obj['isAutomated'] = ApiClient.convertToType(data['isAutomated'], 'Boolean');
            }
            if (data.hasOwnProperty('tagNames')) {
                obj['tagNames'] = ApiClient.convertToType(data['tagNames'], ['String']);
            }
            if (data.hasOwnProperty('autoTestIds')) {
                obj['autoTestIds'] = ApiClient.convertToType(data['autoTestIds'], ['String']);
            }
            if (data.hasOwnProperty('exceptWorkItemIds')) {
                obj['exceptWorkItemIds'] = ApiClient.convertToType(data['exceptWorkItemIds'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * Name or identifier (UUID) of work item
 * @member {String} nameOrId
 */
WorkItemFilterModel.prototype['nameOrId'] = undefined;

/**
 * Collection of identifiers of work items which need to be included in result regardless of filtering
 * @member {Array.<String>} includeIds
 */
WorkItemFilterModel.prototype['includeIds'] = undefined;

/**
 * Collection of identifiers of work items which need to be excluded from result regardless of filtering
 * @member {Array.<String>} excludeIds
 */
WorkItemFilterModel.prototype['excludeIds'] = undefined;

/**
 * Name of work item
 * @member {String} name
 */
WorkItemFilterModel.prototype['name'] = undefined;

/**
 * Collection of global (integer) identifiers
 * @member {Array.<Number>} globalIds
 */
WorkItemFilterModel.prototype['globalIds'] = undefined;

/**
 * Custom attributes of work item
 * @member {Object.<String, Array.<String>>} attributes
 */
WorkItemFilterModel.prototype['attributes'] = undefined;

/**
 * Is result must consist of only actual/deleted work items
 * @member {Boolean} isDeleted
 */
WorkItemFilterModel.prototype['isDeleted'] = undefined;

/**
 * Collection of project identifiers
 * @member {Array.<String>} projectIds
 */
WorkItemFilterModel.prototype['projectIds'] = undefined;

/**
 * Collection of section identifiers
 * @member {Array.<String>} sectionIds
 */
WorkItemFilterModel.prototype['sectionIds'] = undefined;

/**
 * Collection of identifiers of users who created work item
 * @member {Array.<String>} createdByIds
 */
WorkItemFilterModel.prototype['createdByIds'] = undefined;

/**
 * Collection of identifiers of users who applied last modification to work item
 * @member {Array.<String>} modifiedByIds
 */
WorkItemFilterModel.prototype['modifiedByIds'] = undefined;

/**
 * Collection of states of work item
 * @member {Array.<module:model/WorkItemStates>} states
 */
WorkItemFilterModel.prototype['states'] = undefined;

/**
 * Collection of priorities of work item
 * @member {Array.<module:model/WorkItemPriorityModel>} priorities
 */
WorkItemFilterModel.prototype['priorities'] = undefined;

/**
 * Collection of types of work item  <br>Allowed values: `TestCases`, `CheckLists`, `SharedSteps`
 * @member {Array.<String>} entityTypes
 */
WorkItemFilterModel.prototype['entityTypes'] = undefined;

/**
 * Minimum date and time of work item creation
 * @member {Date} createdDateMinimal
 */
WorkItemFilterModel.prototype['createdDateMinimal'] = undefined;

/**
 * Maximum date and time of work item creation
 * @member {Date} createdDateMaximal
 */
WorkItemFilterModel.prototype['createdDateMaximal'] = undefined;

/**
 * Minimum date and time of work item last modification
 * @member {Date} modifiedDateMinimal
 */
WorkItemFilterModel.prototype['modifiedDateMinimal'] = undefined;

/**
 * Maximum date and time of work item last modification
 * @member {Date} modifiedDateMaximal
 */
WorkItemFilterModel.prototype['modifiedDateMaximal'] = undefined;

/**
 * Minimum completion time (seconds) of work item
 * @member {Number} durationMinimal
 */
WorkItemFilterModel.prototype['durationMinimal'] = undefined;

/**
 * Maximum completion time (seconds) of work item
 * @member {Number} durationMaximal
 */
WorkItemFilterModel.prototype['durationMaximal'] = undefined;

/**
 * Is result must consist of only manual/automated work items
 * @member {Boolean} isAutomated
 */
WorkItemFilterModel.prototype['isAutomated'] = undefined;

/**
 * Collection of tags
 * @member {Array.<String>} tagNames
 */
WorkItemFilterModel.prototype['tagNames'] = undefined;

/**
 * Collection of identifiers of linked autotests
 * @member {Array.<String>} autoTestIds
 */
WorkItemFilterModel.prototype['autoTestIds'] = undefined;

/**
 * @member {Array.<String>} exceptWorkItemIds
 */
WorkItemFilterModel.prototype['exceptWorkItemIds'] = undefined;






export default WorkItemFilterModel;

