/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IterationModel from './IterationModel';
import WorkItemPriorityModel from './WorkItemPriorityModel';

/**
 * The WorkItemShortModel model module.
 * @module model/WorkItemShortModel
 * @version 2.0.0
 */
class WorkItemShortModel {
    /**
     * Constructs a new <code>WorkItemShortModel</code>.
     * @alias module:model/WorkItemShortModel
     * @param name {String} 
     * @param entityTypeName {String} Property can have one of these values: CheckLists, SharedSteps, TestCases
     * @param projectId {String} This property is used to link autotest with project
     * @param sectionId {String} This property links workitem with section
     * @param state {String} Property can have one of these values: NeedsWork, NotReady, Ready
     * @param priority {module:model/WorkItemPriorityModel} 
     */
    constructor(name, entityTypeName, projectId, sectionId, state, priority) { 
        
        WorkItemShortModel.initialize(this, name, entityTypeName, projectId, sectionId, state, priority);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, entityTypeName, projectId, sectionId, state, priority) { 
        obj['name'] = name;
        obj['entityTypeName'] = entityTypeName;
        obj['projectId'] = projectId;
        obj['sectionId'] = sectionId;
        obj['state'] = state;
        obj['priority'] = priority;
    }

    /**
     * Constructs a <code>WorkItemShortModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkItemShortModel} obj Optional instance to populate.
     * @return {module:model/WorkItemShortModel} The populated <code>WorkItemShortModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkItemShortModel();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('versionId')) {
                obj['versionId'] = ApiClient.convertToType(data['versionId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('entityTypeName')) {
                obj['entityTypeName'] = ApiClient.convertToType(data['entityTypeName'], 'String');
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
            if (data.hasOwnProperty('sectionId')) {
                obj['sectionId'] = ApiClient.convertToType(data['sectionId'], 'String');
            }
            if (data.hasOwnProperty('isAutomated')) {
                obj['isAutomated'] = ApiClient.convertToType(data['isAutomated'], 'Boolean');
            }
            if (data.hasOwnProperty('globalId')) {
                obj['globalId'] = ApiClient.convertToType(data['globalId'], 'Number');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': Object});
            }
            if (data.hasOwnProperty('createdById')) {
                obj['createdById'] = ApiClient.convertToType(data['createdById'], 'String');
            }
            if (data.hasOwnProperty('modifiedById')) {
                obj['modifiedById'] = ApiClient.convertToType(data['modifiedById'], 'String');
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'Date');
            }
            if (data.hasOwnProperty('modifiedDate')) {
                obj['modifiedDate'] = ApiClient.convertToType(data['modifiedDate'], 'Date');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = WorkItemPriorityModel.constructFromObject(data['priority']);
            }
            if (data.hasOwnProperty('isDeleted')) {
                obj['isDeleted'] = ApiClient.convertToType(data['isDeleted'], 'Boolean');
            }
            if (data.hasOwnProperty('tagNames')) {
                obj['tagNames'] = ApiClient.convertToType(data['tagNames'], ['String']);
            }
            if (data.hasOwnProperty('iterations')) {
                obj['iterations'] = ApiClient.convertToType(data['iterations'], [IterationModel]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
WorkItemShortModel.prototype['id'] = undefined;

/**
 * used for versioning changes in workitem
 * @member {String} versionId
 */
WorkItemShortModel.prototype['versionId'] = undefined;

/**
 * @member {String} name
 */
WorkItemShortModel.prototype['name'] = undefined;

/**
 * Property can have one of these values: CheckLists, SharedSteps, TestCases
 * @member {String} entityTypeName
 */
WorkItemShortModel.prototype['entityTypeName'] = undefined;

/**
 * This property is used to link autotest with project
 * @member {String} projectId
 */
WorkItemShortModel.prototype['projectId'] = undefined;

/**
 * This property links workitem with section
 * @member {String} sectionId
 */
WorkItemShortModel.prototype['sectionId'] = undefined;

/**
 * @member {Boolean} isAutomated
 */
WorkItemShortModel.prototype['isAutomated'] = undefined;

/**
 * @member {Number} globalId
 */
WorkItemShortModel.prototype['globalId'] = undefined;

/**
 * @member {Number} duration
 */
WorkItemShortModel.prototype['duration'] = undefined;

/**
 * @member {Object.<String, Object>} attributes
 */
WorkItemShortModel.prototype['attributes'] = undefined;

/**
 * @member {String} createdById
 */
WorkItemShortModel.prototype['createdById'] = undefined;

/**
 * @member {String} modifiedById
 */
WorkItemShortModel.prototype['modifiedById'] = undefined;

/**
 * @member {Date} createdDate
 */
WorkItemShortModel.prototype['createdDate'] = undefined;

/**
 * @member {Date} modifiedDate
 */
WorkItemShortModel.prototype['modifiedDate'] = undefined;

/**
 * Property can have one of these values: NeedsWork, NotReady, Ready
 * @member {String} state
 */
WorkItemShortModel.prototype['state'] = undefined;

/**
 * @member {module:model/WorkItemPriorityModel} priority
 */
WorkItemShortModel.prototype['priority'] = undefined;

/**
 * @member {Boolean} isDeleted
 */
WorkItemShortModel.prototype['isDeleted'] = undefined;

/**
 * @member {Array.<String>} tagNames
 */
WorkItemShortModel.prototype['tagNames'] = undefined;

/**
 * @member {Array.<module:model/IterationModel>} iterations
 */
WorkItemShortModel.prototype['iterations'] = undefined;






export default WorkItemShortModel;

