/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AttachmentModel from './AttachmentModel';
import AutoTestModelV2GetModel from './AutoTestModelV2GetModel';
import ConfigurationModel from './ConfigurationModel';
import LinkModel from './LinkModel';
import TestPointShortModel from './TestPointShortModel';

/**
 * The TestResultV2GetModel model module.
 * @module model/TestResultV2GetModel
 * @version 2.0.0
 */
class TestResultV2GetModel {
    /**
     * Constructs a new <code>TestResultV2GetModel</code>.
     * @alias module:model/TestResultV2GetModel
     */
    constructor() { 
        
        TestResultV2GetModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TestResultV2GetModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestResultV2GetModel} obj Optional instance to populate.
     * @return {module:model/TestResultV2GetModel} The populated <code>TestResultV2GetModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestResultV2GetModel();

            if (data.hasOwnProperty('configuration')) {
                obj['configuration'] = ConfigurationModel.constructFromObject(data['configuration']);
            }
            if (data.hasOwnProperty('autoTest')) {
                obj['autoTest'] = AutoTestModelV2GetModel.constructFromObject(data['autoTest']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('configurationId')) {
                obj['configurationId'] = ApiClient.convertToType(data['configurationId'], 'String');
            }
            if (data.hasOwnProperty('workItemVersionId')) {
                obj['workItemVersionId'] = ApiClient.convertToType(data['workItemVersionId'], 'String');
            }
            if (data.hasOwnProperty('autoTestId')) {
                obj['autoTestId'] = ApiClient.convertToType(data['autoTestId'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('traces')) {
                obj['traces'] = ApiClient.convertToType(data['traces'], 'String');
            }
            if (data.hasOwnProperty('startedOn')) {
                obj['startedOn'] = ApiClient.convertToType(data['startedOn'], 'Date');
            }
            if (data.hasOwnProperty('completedOn')) {
                obj['completedOn'] = ApiClient.convertToType(data['completedOn'], 'Date');
            }
            if (data.hasOwnProperty('runByUserId')) {
                obj['runByUserId'] = ApiClient.convertToType(data['runByUserId'], 'String');
            }
            if (data.hasOwnProperty('stoppedByUserId')) {
                obj['stoppedByUserId'] = ApiClient.convertToType(data['stoppedByUserId'], 'String');
            }
            if (data.hasOwnProperty('testPointId')) {
                obj['testPointId'] = ApiClient.convertToType(data['testPointId'], 'String');
            }
            if (data.hasOwnProperty('testPoint')) {
                obj['testPoint'] = TestPointShortModel.constructFromObject(data['testPoint']);
            }
            if (data.hasOwnProperty('testRunId')) {
                obj['testRunId'] = ApiClient.convertToType(data['testRunId'], 'String');
            }
            if (data.hasOwnProperty('outcome')) {
                obj['outcome'] = ApiClient.convertToType(data['outcome'], 'String');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], [LinkModel]);
            }
            if (data.hasOwnProperty('attachments')) {
                obj['attachments'] = ApiClient.convertToType(data['attachments'], [AttachmentModel]);
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': 'String'});
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ConfigurationModel} configuration
 */
TestResultV2GetModel.prototype['configuration'] = undefined;

/**
 * @member {module:model/AutoTestModelV2GetModel} autoTest
 */
TestResultV2GetModel.prototype['autoTest'] = undefined;

/**
 * @member {String} id
 */
TestResultV2GetModel.prototype['id'] = undefined;

/**
 * @member {String} configurationId
 */
TestResultV2GetModel.prototype['configurationId'] = undefined;

/**
 * @member {String} workItemVersionId
 */
TestResultV2GetModel.prototype['workItemVersionId'] = undefined;

/**
 * @member {String} autoTestId
 */
TestResultV2GetModel.prototype['autoTestId'] = undefined;

/**
 * @member {String} message
 */
TestResultV2GetModel.prototype['message'] = undefined;

/**
 * @member {String} traces
 */
TestResultV2GetModel.prototype['traces'] = undefined;

/**
 * @member {Date} startedOn
 */
TestResultV2GetModel.prototype['startedOn'] = undefined;

/**
 * @member {Date} completedOn
 */
TestResultV2GetModel.prototype['completedOn'] = undefined;

/**
 * @member {String} runByUserId
 */
TestResultV2GetModel.prototype['runByUserId'] = undefined;

/**
 * @member {String} stoppedByUserId
 */
TestResultV2GetModel.prototype['stoppedByUserId'] = undefined;

/**
 * @member {String} testPointId
 */
TestResultV2GetModel.prototype['testPointId'] = undefined;

/**
 * @member {module:model/TestPointShortModel} testPoint
 */
TestResultV2GetModel.prototype['testPoint'] = undefined;

/**
 * @member {String} testRunId
 */
TestResultV2GetModel.prototype['testRunId'] = undefined;

/**
 * Property can contain one of these values: Passed, Failed, InProgress, Blocked, Skipped
 * @member {String} outcome
 */
TestResultV2GetModel.prototype['outcome'] = undefined;

/**
 * @member {String} comment
 */
TestResultV2GetModel.prototype['comment'] = undefined;

/**
 * @member {Array.<module:model/LinkModel>} links
 */
TestResultV2GetModel.prototype['links'] = undefined;

/**
 * @member {Array.<module:model/AttachmentModel>} attachments
 */
TestResultV2GetModel.prototype['attachments'] = undefined;

/**
 * @member {Object.<String, String>} parameters
 */
TestResultV2GetModel.prototype['parameters'] = undefined;

/**
 * @member {Object.<String, String>} properties
 */
TestResultV2GetModel.prototype['properties'] = undefined;






export default TestResultV2GetModel;

