/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConfigurationPostModel model module.
 * @module model/ConfigurationPostModel
 * @version 2.0.0
 */
class ConfigurationPostModel {
    /**
     * Constructs a new <code>ConfigurationPostModel</code>.
     * @alias module:model/ConfigurationPostModel
     * @param capabilities {Object.<String, String>} 
     * @param projectId {String} This property is used to link configuration with project
     * @param name {String} 
     */
    constructor(capabilities, projectId, name) { 
        
        ConfigurationPostModel.initialize(this, capabilities, projectId, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, capabilities, projectId, name) { 
        obj['capabilities'] = capabilities;
        obj['projectId'] = projectId;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>ConfigurationPostModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConfigurationPostModel} obj Optional instance to populate.
     * @return {module:model/ConfigurationPostModel} The populated <code>ConfigurationPostModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConfigurationPostModel();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isActive')) {
                obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');
            }
            if (data.hasOwnProperty('capabilities')) {
                obj['capabilities'] = ApiClient.convertToType(data['capabilities'], {'String': 'String'});
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
            if (data.hasOwnProperty('isDefault')) {
                obj['isDefault'] = ApiClient.convertToType(data['isDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} description
 */
ConfigurationPostModel.prototype['description'] = undefined;

/**
 * @member {Boolean} isActive
 */
ConfigurationPostModel.prototype['isActive'] = undefined;

/**
 * @member {Object.<String, String>} capabilities
 */
ConfigurationPostModel.prototype['capabilities'] = undefined;

/**
 * This property is used to link configuration with project
 * @member {String} projectId
 */
ConfigurationPostModel.prototype['projectId'] = undefined;

/**
 * @member {Boolean} isDefault
 */
ConfigurationPostModel.prototype['isDefault'] = undefined;

/**
 * @member {String} name
 */
ConfigurationPostModel.prototype['name'] = undefined;






export default ConfigurationPostModel;

