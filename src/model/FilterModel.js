/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WorkItemSearchQueryModel from './WorkItemSearchQueryModel';

/**
 * The FilterModel model module.
 * @module model/FilterModel
 * @version 2.0.0
 */
class FilterModel {
    /**
     * Constructs a new <code>FilterModel</code>.
     * @alias module:model/FilterModel
     */
    constructor() { 
        
        FilterModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FilterModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilterModel} obj Optional instance to populate.
     * @return {module:model/FilterModel} The populated <code>FilterModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilterModel();

            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'Date');
            }
            if (data.hasOwnProperty('modifiedDate')) {
                obj['modifiedDate'] = ApiClient.convertToType(data['modifiedDate'], 'Date');
            }
            if (data.hasOwnProperty('createdById')) {
                obj['createdById'] = ApiClient.convertToType(data['createdById'], 'String');
            }
            if (data.hasOwnProperty('modifiedById')) {
                obj['modifiedById'] = ApiClient.convertToType(data['modifiedById'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = WorkItemSearchQueryModel.constructFromObject(data['data']);
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
            if (data.hasOwnProperty('fieldsToShow')) {
                obj['fieldsToShow'] = ApiClient.convertToType(data['fieldsToShow'], Object);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('isDeleted')) {
                obj['isDeleted'] = ApiClient.convertToType(data['isDeleted'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {Date} createdDate
 */
FilterModel.prototype['createdDate'] = undefined;

/**
 * @member {Date} modifiedDate
 */
FilterModel.prototype['modifiedDate'] = undefined;

/**
 * @member {String} createdById
 */
FilterModel.prototype['createdById'] = undefined;

/**
 * @member {String} modifiedById
 */
FilterModel.prototype['modifiedById'] = undefined;

/**
 * @member {module:model/WorkItemSearchQueryModel} data
 */
FilterModel.prototype['data'] = undefined;

/**
 * @member {String} projectId
 */
FilterModel.prototype['projectId'] = undefined;

/**
 * @member {Object} fieldsToShow
 */
FilterModel.prototype['fieldsToShow'] = undefined;

/**
 * @member {String} name
 */
FilterModel.prototype['name'] = undefined;

/**
 * @member {String} id
 */
FilterModel.prototype['id'] = undefined;

/**
 * @member {Boolean} isDeleted
 */
FilterModel.prototype['isDeleted'] = undefined;






export default FilterModel;

