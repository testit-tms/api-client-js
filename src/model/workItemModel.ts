/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AttachmentModel } from './attachmentModel';
import { AutoTestModel } from './autoTestModel';
import { IterationModel } from './iterationModel';
import { LinkModel } from './linkModel';
import { StepModel } from './stepModel';
import { TagShortModel } from './tagShortModel';
import { WorkItemEntityTypes } from './workItemEntityTypes';
import { WorkItemPriorityModel } from './workItemPriorityModel';
import { WorkItemStates } from './workItemStates';

export class WorkItemModel {
    /**
    * used for versioning changes in workitem
    */
    'versionId'?: string;
    /**
    * used for getting a median duration of all autotests related to this workitem
    */
    'medianDuration'?: number;
    'isDeleted'?: boolean;
    'projectId'?: string;
    'entityTypeName': WorkItemEntityTypes;
    'isAutomated'?: boolean;
    'autoTests'?: Array<AutoTestModel> | null;
    'attachments'?: Array<AttachmentModel> | null;
    'sectionPreconditionSteps'?: Array<StepModel> | null;
    'sectionPostconditionSteps'?: Array<StepModel> | null;
    /**
    * used for define chronology of workitem state in each version
    */
    'versionNumber'?: number;
    'iterations'?: Array<IterationModel> | null;
    'createdDate'?: Date;
    'modifiedDate'?: Date | null;
    'createdById'?: string;
    'modifiedById'?: string | null;
    'globalId'?: number;
    'id': string;
    'sectionId'?: string;
    'description'?: string | null;
    'state': WorkItemStates;
    'priority': WorkItemPriorityModel;
    'steps': Array<StepModel>;
    'preconditionSteps': Array<StepModel>;
    'postconditionSteps': Array<StepModel>;
    'duration'?: number;
    'attributes': { [key: string]: any; };
    'tags': Array<TagShortModel>;
    'links': Array<LinkModel>;
    'name': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "versionId",
            "baseName": "versionId",
            "type": "string"
        },
        {
            "name": "medianDuration",
            "baseName": "medianDuration",
            "type": "number"
        },
        {
            "name": "isDeleted",
            "baseName": "isDeleted",
            "type": "boolean"
        },
        {
            "name": "projectId",
            "baseName": "projectId",
            "type": "string"
        },
        {
            "name": "entityTypeName",
            "baseName": "entityTypeName",
            "type": "WorkItemEntityTypes"
        },
        {
            "name": "isAutomated",
            "baseName": "isAutomated",
            "type": "boolean"
        },
        {
            "name": "autoTests",
            "baseName": "autoTests",
            "type": "Array<AutoTestModel>"
        },
        {
            "name": "attachments",
            "baseName": "attachments",
            "type": "Array<AttachmentModel>"
        },
        {
            "name": "sectionPreconditionSteps",
            "baseName": "sectionPreconditionSteps",
            "type": "Array<StepModel>"
        },
        {
            "name": "sectionPostconditionSteps",
            "baseName": "sectionPostconditionSteps",
            "type": "Array<StepModel>"
        },
        {
            "name": "versionNumber",
            "baseName": "versionNumber",
            "type": "number"
        },
        {
            "name": "iterations",
            "baseName": "iterations",
            "type": "Array<IterationModel>"
        },
        {
            "name": "createdDate",
            "baseName": "createdDate",
            "type": "Date"
        },
        {
            "name": "modifiedDate",
            "baseName": "modifiedDate",
            "type": "Date"
        },
        {
            "name": "createdById",
            "baseName": "createdById",
            "type": "string"
        },
        {
            "name": "modifiedById",
            "baseName": "modifiedById",
            "type": "string"
        },
        {
            "name": "globalId",
            "baseName": "globalId",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "sectionId",
            "baseName": "sectionId",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "WorkItemStates"
        },
        {
            "name": "priority",
            "baseName": "priority",
            "type": "WorkItemPriorityModel"
        },
        {
            "name": "steps",
            "baseName": "steps",
            "type": "Array<StepModel>"
        },
        {
            "name": "preconditionSteps",
            "baseName": "preconditionSteps",
            "type": "Array<StepModel>"
        },
        {
            "name": "postconditionSteps",
            "baseName": "postconditionSteps",
            "type": "Array<StepModel>"
        },
        {
            "name": "duration",
            "baseName": "duration",
            "type": "number"
        },
        {
            "name": "attributes",
            "baseName": "attributes",
            "type": "{ [key: string]: any; }"
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<TagShortModel>"
        },
        {
            "name": "links",
            "baseName": "links",
            "type": "Array<LinkModel>"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return WorkItemModel.attributeTypeMap;
    }
}

