/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateRangeModel from './DateRangeModel';
import DurationRangeModel from './DurationRangeModel';
import WorkItemPriorityModel from './WorkItemPriorityModel';
import WorkItemStates from './WorkItemStates';

/**
 * The TestSuiteWorkItemsSearchModel model module.
 * @module model/TestSuiteWorkItemsSearchModel
 * @version 2.0.0
 */
class TestSuiteWorkItemsSearchModel {
    /**
     * Constructs a new <code>TestSuiteWorkItemsSearchModel</code>.
     * @alias module:model/TestSuiteWorkItemsSearchModel
     */
    constructor() { 
        
        TestSuiteWorkItemsSearchModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TestSuiteWorkItemsSearchModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestSuiteWorkItemsSearchModel} obj Optional instance to populate.
     * @return {module:model/TestSuiteWorkItemsSearchModel} The populated <code>TestSuiteWorkItemsSearchModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestSuiteWorkItemsSearchModel();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('globalIds')) {
                obj['globalIds'] = ApiClient.convertToType(data['globalIds'], ['Number']);
            }
            if (data.hasOwnProperty('sectionIds')) {
                obj['sectionIds'] = ApiClient.convertToType(data['sectionIds'], ['String']);
            }
            if (data.hasOwnProperty('priorities')) {
                obj['priorities'] = ApiClient.convertToType(data['priorities'], [WorkItemPriorityModel]);
            }
            if (data.hasOwnProperty('isAutomated')) {
                obj['isAutomated'] = ApiClient.convertToType(data['isAutomated'], 'Boolean');
            }
            if (data.hasOwnProperty('states')) {
                obj['states'] = ApiClient.convertToType(data['states'], [WorkItemStates]);
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = DurationRangeModel.constructFromObject(data['duration']);
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = DateRangeModel.constructFromObject(data['createdDate']);
            }
            if (data.hasOwnProperty('modifiedDate')) {
                obj['modifiedDate'] = DateRangeModel.constructFromObject(data['modifiedDate']);
            }
            if (data.hasOwnProperty('createdByIds')) {
                obj['createdByIds'] = ApiClient.convertToType(data['createdByIds'], ['String']);
            }
            if (data.hasOwnProperty('modifiedByIds')) {
                obj['modifiedByIds'] = ApiClient.convertToType(data['modifiedByIds'], ['String']);
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': ['String']});
            }
            if (data.hasOwnProperty('isDeleted')) {
                obj['isDeleted'] = ApiClient.convertToType(data['isDeleted'], 'Boolean');
            }
            if (data.hasOwnProperty('tagNames')) {
                obj['tagNames'] = ApiClient.convertToType(data['tagNames'], ['String']);
            }
            if (data.hasOwnProperty('entityTypes')) {
                obj['entityTypes'] = ApiClient.convertToType(data['entityTypes'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * Name of work item
 * @member {String} name
 */
TestSuiteWorkItemsSearchModel.prototype['name'] = undefined;

/**
 * Collection of global (integer) identifiers
 * @member {Array.<Number>} globalIds
 */
TestSuiteWorkItemsSearchModel.prototype['globalIds'] = undefined;

/**
 * Collection of section identifiers
 * @member {Array.<String>} sectionIds
 */
TestSuiteWorkItemsSearchModel.prototype['sectionIds'] = undefined;

/**
 * Collection of priorities of work item
 * @member {Array.<module:model/WorkItemPriorityModel>} priorities
 */
TestSuiteWorkItemsSearchModel.prototype['priorities'] = undefined;

/**
 * Is result must consist of only manual/automated work items
 * @member {Boolean} isAutomated
 */
TestSuiteWorkItemsSearchModel.prototype['isAutomated'] = undefined;

/**
 * Collection of states of work item
 * @member {Array.<module:model/WorkItemStates>} states
 */
TestSuiteWorkItemsSearchModel.prototype['states'] = undefined;

/**
 * @member {module:model/DurationRangeModel} duration
 */
TestSuiteWorkItemsSearchModel.prototype['duration'] = undefined;

/**
 * @member {module:model/DateRangeModel} createdDate
 */
TestSuiteWorkItemsSearchModel.prototype['createdDate'] = undefined;

/**
 * @member {module:model/DateRangeModel} modifiedDate
 */
TestSuiteWorkItemsSearchModel.prototype['modifiedDate'] = undefined;

/**
 * Collection of identifiers of users who created work item
 * @member {Array.<String>} createdByIds
 */
TestSuiteWorkItemsSearchModel.prototype['createdByIds'] = undefined;

/**
 * Collection of identifiers of users who applied last modification to work item
 * @member {Array.<String>} modifiedByIds
 */
TestSuiteWorkItemsSearchModel.prototype['modifiedByIds'] = undefined;

/**
 * Custom attributes of work item
 * @member {Object.<String, Array.<String>>} attributes
 */
TestSuiteWorkItemsSearchModel.prototype['attributes'] = undefined;

/**
 * Is result must consist of only actual/deleted work items
 * @member {Boolean} isDeleted
 */
TestSuiteWorkItemsSearchModel.prototype['isDeleted'] = undefined;

/**
 * Collection of tags
 * @member {Array.<String>} tagNames
 */
TestSuiteWorkItemsSearchModel.prototype['tagNames'] = undefined;

/**
 * Collection of types of work item  <br>Allowed values: `TestCases`, `CheckLists`, `SharedSteps`
 * @member {Array.<String>} entityTypes
 */
TestSuiteWorkItemsSearchModel.prototype['entityTypes'] = undefined;






export default TestSuiteWorkItemsSearchModel;

