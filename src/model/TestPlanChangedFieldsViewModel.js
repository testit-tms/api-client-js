/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BooleanNullableTestPlanChangedFieldViewModel from './BooleanNullableTestPlanChangedFieldViewModel';
import BooleanTestPlanChangedFieldViewModel from './BooleanTestPlanChangedFieldViewModel';
import CustomAttributeChangeModel from './CustomAttributeChangeModel';
import PeriodViewModelTestPlanChangedFieldViewModel from './PeriodViewModelTestPlanChangedFieldViewModel';
import StringArrayTestPlanChangedFieldViewModel from './StringArrayTestPlanChangedFieldViewModel';
import StringTestPlanChangedFieldViewModel from './StringTestPlanChangedFieldViewModel';
import TestPointChangeViewModelTestPlanChangedFieldViewModel from './TestPointChangeViewModelTestPlanChangedFieldViewModel';
import TestResultChangeViewModelTestPlanChangedFieldViewModel from './TestResultChangeViewModelTestPlanChangedFieldViewModel';
import TestSuiteChangeViewModelTestPlanChangedFieldViewModel from './TestSuiteChangeViewModelTestPlanChangedFieldViewModel';

/**
 * The TestPlanChangedFieldsViewModel model module.
 * @module model/TestPlanChangedFieldsViewModel
 * @version 2.0.0
 */
class TestPlanChangedFieldsViewModel {
    /**
     * Constructs a new <code>TestPlanChangedFieldsViewModel</code>.
     * @alias module:model/TestPlanChangedFieldsViewModel
     */
    constructor() { 
        
        TestPlanChangedFieldsViewModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TestPlanChangedFieldsViewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestPlanChangedFieldsViewModel} obj Optional instance to populate.
     * @return {module:model/TestPlanChangedFieldsViewModel} The populated <code>TestPlanChangedFieldsViewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestPlanChangedFieldsViewModel();

            if (data.hasOwnProperty('name')) {
                obj['name'] = StringTestPlanChangedFieldViewModel.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = StringTestPlanChangedFieldViewModel.constructFromObject(data['description']);
            }
            if (data.hasOwnProperty('productName')) {
                obj['productName'] = StringTestPlanChangedFieldViewModel.constructFromObject(data['productName']);
            }
            if (data.hasOwnProperty('build')) {
                obj['build'] = StringTestPlanChangedFieldViewModel.constructFromObject(data['build']);
            }
            if (data.hasOwnProperty('period')) {
                obj['period'] = PeriodViewModelTestPlanChangedFieldViewModel.constructFromObject(data['period']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = StringTestPlanChangedFieldViewModel.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = StringArrayTestPlanChangedFieldViewModel.constructFromObject(data['tags']);
            }
            if (data.hasOwnProperty('testSuite')) {
                obj['testSuite'] = TestSuiteChangeViewModelTestPlanChangedFieldViewModel.constructFromObject(data['testSuite']);
            }
            if (data.hasOwnProperty('testPoints')) {
                obj['testPoints'] = TestPointChangeViewModelTestPlanChangedFieldViewModel.constructFromObject(data['testPoints']);
            }
            if (data.hasOwnProperty('testResults')) {
                obj['testResults'] = TestResultChangeViewModelTestPlanChangedFieldViewModel.constructFromObject(data['testResults']);
            }
            if (data.hasOwnProperty('locking')) {
                obj['locking'] = BooleanTestPlanChangedFieldViewModel.constructFromObject(data['locking']);
            }
            if (data.hasOwnProperty('hasAutomaticDurationTimer')) {
                obj['hasAutomaticDurationTimer'] = BooleanNullableTestPlanChangedFieldViewModel.constructFromObject(data['hasAutomaticDurationTimer']);
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': CustomAttributeChangeModel});
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/StringTestPlanChangedFieldViewModel} name
 */
TestPlanChangedFieldsViewModel.prototype['name'] = undefined;

/**
 * @member {module:model/StringTestPlanChangedFieldViewModel} description
 */
TestPlanChangedFieldsViewModel.prototype['description'] = undefined;

/**
 * @member {module:model/StringTestPlanChangedFieldViewModel} productName
 */
TestPlanChangedFieldsViewModel.prototype['productName'] = undefined;

/**
 * @member {module:model/StringTestPlanChangedFieldViewModel} build
 */
TestPlanChangedFieldsViewModel.prototype['build'] = undefined;

/**
 * @member {module:model/PeriodViewModelTestPlanChangedFieldViewModel} period
 */
TestPlanChangedFieldsViewModel.prototype['period'] = undefined;

/**
 * @member {module:model/StringTestPlanChangedFieldViewModel} status
 */
TestPlanChangedFieldsViewModel.prototype['status'] = undefined;

/**
 * @member {module:model/StringArrayTestPlanChangedFieldViewModel} tags
 */
TestPlanChangedFieldsViewModel.prototype['tags'] = undefined;

/**
 * @member {module:model/TestSuiteChangeViewModelTestPlanChangedFieldViewModel} testSuite
 */
TestPlanChangedFieldsViewModel.prototype['testSuite'] = undefined;

/**
 * @member {module:model/TestPointChangeViewModelTestPlanChangedFieldViewModel} testPoints
 */
TestPlanChangedFieldsViewModel.prototype['testPoints'] = undefined;

/**
 * @member {module:model/TestResultChangeViewModelTestPlanChangedFieldViewModel} testResults
 */
TestPlanChangedFieldsViewModel.prototype['testResults'] = undefined;

/**
 * @member {module:model/BooleanTestPlanChangedFieldViewModel} locking
 */
TestPlanChangedFieldsViewModel.prototype['locking'] = undefined;

/**
 * @member {module:model/BooleanNullableTestPlanChangedFieldViewModel} hasAutomaticDurationTimer
 */
TestPlanChangedFieldsViewModel.prototype['hasAutomaticDurationTimer'] = undefined;

/**
 * @member {Object.<String, module:model/CustomAttributeChangeModel>} attributes
 */
TestPlanChangedFieldsViewModel.prototype['attributes'] = undefined;






export default TestPlanChangedFieldsViewModel;

