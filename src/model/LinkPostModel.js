/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinkType from './LinkType';

/**
 * The LinkPostModel model module.
 * @module model/LinkPostModel
 * @version 2.0.0
 */
class LinkPostModel {
    /**
     * Constructs a new <code>LinkPostModel</code>.
     * @alias module:model/LinkPostModel
     * @param url {String} Address can be specified without protocol, but necessarily with the domain.
     */
    constructor(url) { 
        
        LinkPostModel.initialize(this, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, url) { 
        obj['url'] = url;
    }

    /**
     * Constructs a <code>LinkPostModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LinkPostModel} obj Optional instance to populate.
     * @return {module:model/LinkPostModel} The populated <code>LinkPostModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LinkPostModel();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = LinkType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('hasInfo')) {
                obj['hasInfo'] = ApiClient.convertToType(data['hasInfo'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Link name.
 * @member {String} title
 */
LinkPostModel.prototype['title'] = undefined;

/**
 * Address can be specified without protocol, but necessarily with the domain.
 * @member {String} url
 */
LinkPostModel.prototype['url'] = undefined;

/**
 * Link description.
 * @member {String} description
 */
LinkPostModel.prototype['description'] = undefined;

/**
 * @member {module:model/LinkType} type
 */
LinkPostModel.prototype['type'] = undefined;

/**
 * @member {Boolean} hasInfo
 */
LinkPostModel.prototype['hasInfo'] = undefined;






export default LinkPostModel;

