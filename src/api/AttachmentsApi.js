/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AttachmentModel from '../model/AttachmentModel';
import ImageResizeType from '../model/ImageResizeType';
import ProblemDetails from '../model/ProblemDetails';
import ValidationProblemDetails from '../model/ValidationProblemDetails';

/**
* Attachments service.
* @module api/AttachmentsApi
* @version 2.0.0
*/
export default class AttachmentsApi {

    /**
    * Constructs a new AttachmentsApi. 
    * @alias module:api/AttachmentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV2AttachmentsIdDelete operation.
     * @callback module:api/AttachmentsApi~apiV2AttachmentsIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete attachment file
     * @param {String} id 
     * @param {module:api/AttachmentsApi~apiV2AttachmentsIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV2AttachmentsIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiV2AttachmentsIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/attachments/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2AttachmentsIdGet operation.
     * @callback module:api/AttachmentsApi~apiV2AttachmentsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download attachment file
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.width Width of the result image
     * @param {Number} opts.height Height of the result image
     * @param {module:model/ImageResizeType} opts.resizeType Type of resizing to apply to the result image
     * @param {String} opts.backgroundColor Color of the background if the `resizeType` is `AddBackgroundStripes`
     * @param {Boolean} opts.preview If image must be converted to a preview (lower quality, no animation)
     * @param {module:api/AttachmentsApi~apiV2AttachmentsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    apiV2AttachmentsIdGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiV2AttachmentsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'width': opts['width'],
        'height': opts['height'],
        'resizeType': opts['resizeType'],
        'backgroundColor': opts['backgroundColor'],
        'preview': opts['preview']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = [];
      let accepts = ['application/octet-stream'];
      let returnType = File;
      return this.apiClient.callApi(
        '/api/v2/attachments/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2AttachmentsOccupiedFileStorageSizeGet operation.
     * @callback module:api/AttachmentsApi~apiV2AttachmentsOccupiedFileStorageSizeGetCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/AttachmentsApi~apiV2AttachmentsOccupiedFileStorageSizeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    apiV2AttachmentsOccupiedFileStorageSizeGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = 'Number';
      return this.apiClient.callApi(
        '/api/v2/attachments/occupiedFileStorageSize', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2AttachmentsPost operation.
     * @callback module:api/AttachmentsApi~apiV2AttachmentsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttachmentModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upload new attachment file
     * File size is restricted to 1 GB (1 073 741 824 bytes)
     * @param {Object} opts Optional parameters
     * @param {File} opts.file 
     * @param {module:api/AttachmentsApi~apiV2AttachmentsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttachmentModel}
     */
    apiV2AttachmentsPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'file': opts['file']
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = AttachmentModel;
      return this.apiClient.callApi(
        '/api/v2/attachments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
