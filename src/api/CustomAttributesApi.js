/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CustomAttributeMergeToGlobalModel from '../model/CustomAttributeMergeToGlobalModel';
import CustomAttributeModel from '../model/CustomAttributeModel';
import CustomAttributePostModel from '../model/CustomAttributePostModel';
import CustomAttributeReplaceModel from '../model/CustomAttributeReplaceModel';
import CustomAttributeSearchQueryModel from '../model/CustomAttributeSearchQueryModel';
import CustomAttributeSetPositionsModel from '../model/CustomAttributeSetPositionsModel';
import CustomAttributeUpdateModel from '../model/CustomAttributeUpdateModel';
import ProjectShortestModel from '../model/ProjectShortestModel';

/**
* CustomAttributes service.
* @module api/CustomAttributesApi
* @version 2.0.0
*/
export default class CustomAttributesApi {

    /**
    * Constructs a new CustomAttributesApi. 
    * @alias module:api/CustomAttributesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV2CustomAttributesIdDelete operation.
     * @callback module:api/CustomAttributesApi~apiV2CustomAttributesIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {module:api/CustomAttributesApi~apiV2CustomAttributesIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV2CustomAttributesIdDelete(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiV2CustomAttributesIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/customAttributes/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2CustomAttributesIdGet operation.
     * @callback module:api/CustomAttributesApi~apiV2CustomAttributesIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomAttributeModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {module:api/CustomAttributesApi~apiV2CustomAttributesIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomAttributeModel}
     */
    apiV2CustomAttributesIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiV2CustomAttributesIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomAttributeModel;
      return this.apiClient.callApi(
        '/api/v2/customAttributes/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2CustomAttributesIdMakeGlobalPost operation.
     * @callback module:api/CustomAttributesApi~apiV2CustomAttributesIdMakeGlobalPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {module:api/CustomAttributesApi~apiV2CustomAttributesIdMakeGlobalPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV2CustomAttributesIdMakeGlobalPost(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiV2CustomAttributesIdMakeGlobalPost");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/customAttributes/{id}/makeGlobal', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2CustomAttributesIdProjectsGet operation.
     * @callback module:api/CustomAttributesApi~apiV2CustomAttributesIdProjectsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ProjectShortestModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {module:api/CustomAttributesApi~apiV2CustomAttributesIdProjectsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ProjectShortestModel>}
     */
    apiV2CustomAttributesIdProjectsGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiV2CustomAttributesIdProjectsGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ProjectShortestModel];
      return this.apiClient.callApi(
        '/api/v2/customAttributes/{id}/projects', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2CustomAttributesIdPut operation.
     * @callback module:api/CustomAttributesApi~apiV2CustomAttributesIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {module:model/CustomAttributeUpdateModel} opts.customAttributeUpdateModel 
     * @param {module:api/CustomAttributesApi~apiV2CustomAttributesIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV2CustomAttributesIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['customAttributeUpdateModel'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiV2CustomAttributesIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/customAttributes/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2CustomAttributesMergePost operation.
     * @callback module:api/CustomAttributesApi~apiV2CustomAttributesMergePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomAttributeModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/CustomAttributeMergeToGlobalModel} opts.customAttributeMergeToGlobalModel 
     * @param {module:api/CustomAttributesApi~apiV2CustomAttributesMergePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomAttributeModel}
     */
    apiV2CustomAttributesMergePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['customAttributeMergeToGlobalModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomAttributeModel;
      return this.apiClient.callApi(
        '/api/v2/customAttributes/merge', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2CustomAttributesOrderPost operation.
     * @callback module:api/CustomAttributesApi~apiV2CustomAttributesOrderPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/CustomAttributeSetPositionsModel} opts.customAttributeSetPositionsModel 
     * @param {module:api/CustomAttributesApi~apiV2CustomAttributesOrderPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV2CustomAttributesOrderPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['customAttributeSetPositionsModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/customAttributes/order', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2CustomAttributesPost operation.
     * @callback module:api/CustomAttributesApi~apiV2CustomAttributesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomAttributeModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/CustomAttributePostModel} opts.customAttributePostModel 
     * @param {module:api/CustomAttributesApi~apiV2CustomAttributesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomAttributeModel}
     */
    apiV2CustomAttributesPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['customAttributePostModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomAttributeModel;
      return this.apiClient.callApi(
        '/api/v2/customAttributes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2CustomAttributesReplacePost operation.
     * @callback module:api/CustomAttributesApi~apiV2CustomAttributesReplacePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomAttributeModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/CustomAttributeReplaceModel} opts.customAttributeReplaceModel 
     * @param {module:api/CustomAttributesApi~apiV2CustomAttributesReplacePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomAttributeModel}
     */
    apiV2CustomAttributesReplacePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['customAttributeReplaceModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CustomAttributeModel;
      return this.apiClient.callApi(
        '/api/v2/customAttributes/replace', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2CustomAttributesSearchPost operation.
     * @callback module:api/CustomAttributesApi~apiV2CustomAttributesSearchPostCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CustomAttributeModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {Number} opts.skip Amount of items to be skipped (offset)
     * @param {Number} opts.take Amount of items to be taken (limit)
     * @param {String} opts.orderBy SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC)
     * @param {String} opts.searchField Property name for searching
     * @param {String} opts.searchValue Value for searching
     * @param {module:model/CustomAttributeSearchQueryModel} opts.customAttributeSearchQueryModel 
     * @param {module:api/CustomAttributesApi~apiV2CustomAttributesSearchPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CustomAttributeModel>}
     */
    apiV2CustomAttributesSearchPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['customAttributeSearchQueryModel'];

      let pathParams = {
      };
      let queryParams = {
        'Skip': opts['skip'],
        'Take': opts['take'],
        'OrderBy': opts['orderBy'],
        'SearchField': opts['searchField'],
        'SearchValue': opts['searchValue']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [CustomAttributeModel];
      return this.apiClient.callApi(
        '/api/v2/customAttributes/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
