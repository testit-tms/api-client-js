/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ConfigurationByParametersModel from '../model/ConfigurationByParametersModel';
import ConfigurationModel from '../model/ConfigurationModel';
import ConfigurationPostModel from '../model/ConfigurationPostModel';
import ConfigurationPutModel from '../model/ConfigurationPutModel';
import ConfigurationSelectModel from '../model/ConfigurationSelectModel';
import ProblemDetails from '../model/ProblemDetails';
import ValidationProblemDetails from '../model/ValidationProblemDetails';

/**
* Configurations service.
* @module api/ConfigurationsApi
* @version 2.0.0
*/
export default class ConfigurationsApi {

    /**
    * Constructs a new ConfigurationsApi. 
    * @alias module:api/ConfigurationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV2ConfigurationsCreateByParametersPost operation.
     * @callback module:api/ConfigurationsApi~apiV2ConfigurationsCreateByParametersPostCallback
     * @param {String} error Error message, if any.
     * @param {Array.<String>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Configurations by parameters
     * <br>Use case  <br>User sets request model (listed in the request example)  <br>User runs method execution  <br>System creates configurations  <br>System returns created configuration ids (listed in the response example)
     * @param {Object} opts Optional parameters
     * @param {module:model/ConfigurationByParametersModel} opts.configurationByParametersModel 
     * @param {module:api/ConfigurationsApi~apiV2ConfigurationsCreateByParametersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<String>}
     */
    apiV2ConfigurationsCreateByParametersPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['configurationByParametersModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ['String'];
      return this.apiClient.callApi(
        '/api/v2/configurations/createByParameters', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2ConfigurationsSearchPost operation.
     * @callback module:api/ConfigurationsApi~apiV2ConfigurationsSearchPostCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ConfigurationModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search for configurations
     * @param {Object} opts Optional parameters
     * @param {Number} opts.skip Amount of items to be skipped (offset)
     * @param {Number} opts.take Amount of items to be taken (limit)
     * @param {String} opts.orderBy SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC)
     * @param {String} opts.searchField Property name for searching
     * @param {String} opts.searchValue Value for searching
     * @param {module:model/ConfigurationSelectModel} opts.configurationSelectModel Model containing all the filters
     * @param {module:api/ConfigurationsApi~apiV2ConfigurationsSearchPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ConfigurationModel>}
     */
    apiV2ConfigurationsSearchPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['configurationSelectModel'];

      let pathParams = {
      };
      let queryParams = {
        'Skip': opts['skip'],
        'Take': opts['take'],
        'OrderBy': opts['orderBy'],
        'SearchField': opts['searchField'],
        'SearchValue': opts['searchValue']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [ConfigurationModel];
      return this.apiClient.callApi(
        '/api/v2/configurations/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createConfiguration operation.
     * @callback module:api/ConfigurationsApi~createConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConfigurationModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Configuration
     * <br>Use case  <br>User sets configuration model (listed in the request example)  <br>User runs method execution  <br>System creates configuration  <br>System returns created configuration (listed in the response example)
     * @param {Object} opts Optional parameters
     * @param {module:model/ConfigurationPostModel} opts.configurationPostModel 
     * @param {module:api/ConfigurationsApi~createConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConfigurationModel}
     */
    createConfiguration(opts, callback) {
      opts = opts || {};
      let postBody = opts['configurationPostModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConfigurationModel;
      return this.apiClient.callApi(
        '/api/v2/configurations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getConfigurationById operation.
     * @callback module:api/ConfigurationsApi~getConfigurationByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConfigurationModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get configuration by internal or global ID
     * <br>Use case  <br>User sets configuration internal (guid format) or global (integer format) identifier  <br>User runs method execution  <br>System search configuration using the identifier  <br>System returns configuration
     * @param {String} id 
     * @param {module:api/ConfigurationsApi~getConfigurationByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConfigurationModel}
     */
    getConfigurationById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getConfigurationById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ConfigurationModel;
      return this.apiClient.callApi(
        '/api/v2/configurations/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateConfiguration operation.
     * @callback module:api/ConfigurationsApi~updateConfigurationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Configuration
     * <br>Use case  <br>User sets configuration updated properties(listed in the request example)  <br>User runs method execution  <br>System updated configuration using updated properties  <br>System returns no content response
     * @param {Object} opts Optional parameters
     * @param {module:model/ConfigurationPutModel} opts.configurationPutModel 
     * @param {module:api/ConfigurationsApi~updateConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateConfiguration(opts, callback) {
      opts = opts || {};
      let postBody = opts['configurationPutModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/configurations', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
