/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ProblemDetails from '../model/ProblemDetails';
import ValidationProblemDetails from '../model/ValidationProblemDetails';
import WorkItemCommentModel from '../model/WorkItemCommentModel';
import WorkItemCommentPostModel from '../model/WorkItemCommentPostModel';
import WorkItemCommentPutModel from '../model/WorkItemCommentPutModel';

/**
* WorkItemsComments service.
* @module api/WorkItemsCommentsApi
* @version 2.0.0
*/
export default class WorkItemsCommentsApi {

    /**
    * Constructs a new WorkItemsCommentsApi. 
    * @alias module:api/WorkItemsCommentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV2WorkItemsCommentsCommentIdDelete operation.
     * @callback module:api/WorkItemsCommentsApi~apiV2WorkItemsCommentsCommentIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete WorkItem comment
     * <br>Use case  <br>User sets comment identifier  <br>User runs method execution  <br>System delete comment   <br>System returns success status code
     * @param {String} commentId 
     * @param {module:api/WorkItemsCommentsApi~apiV2WorkItemsCommentsCommentIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV2WorkItemsCommentsCommentIdDelete(commentId, callback) {
      let postBody = null;
      // verify the required parameter 'commentId' is set
      if (commentId === undefined || commentId === null) {
        throw new Error("Missing the required parameter 'commentId' when calling apiV2WorkItemsCommentsCommentIdDelete");
      }

      let pathParams = {
        'commentId': commentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/workItems/comments/{commentId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2WorkItemsCommentsPost operation.
     * @callback module:api/WorkItemsCommentsApi~apiV2WorkItemsCommentsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkItemCommentModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create WorkItem comment
     * <br>Use case  <br>User sets comment properties (listed in request parameters)  <br>User runs method execution  <br>System creates comment   <br>System returns comment model (listed in response parameters)
     * @param {Object} opts Optional parameters
     * @param {module:model/WorkItemCommentPostModel} opts.workItemCommentPostModel 
     * @param {module:api/WorkItemsCommentsApi~apiV2WorkItemsCommentsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkItemCommentModel}
     */
    apiV2WorkItemsCommentsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['workItemCommentPostModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WorkItemCommentModel;
      return this.apiClient.callApi(
        '/api/v2/workItems/comments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2WorkItemsCommentsPut operation.
     * @callback module:api/WorkItemsCommentsApi~apiV2WorkItemsCommentsPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update WorkItem comment
     * <br>Use case  <br>User sets comment properties (listed in request parameters)  <br>User runs method execution  <br>System updates comment   <br>System returns success status code
     * @param {Object} opts Optional parameters
     * @param {module:model/WorkItemCommentPutModel} opts.workItemCommentPutModel 
     * @param {module:api/WorkItemsCommentsApi~apiV2WorkItemsCommentsPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV2WorkItemsCommentsPut(opts, callback) {
      opts = opts || {};
      let postBody = opts['workItemCommentPutModel'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/workItems/comments', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2WorkItemsIdCommentsGet operation.
     * @callback module:api/WorkItemsCommentsApi~apiV2WorkItemsIdCommentsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/WorkItemCommentModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get WorkItem comments by Id or GlobalId
     * <br>Use case  <br>User sets workitem identifier  <br>User runs method execution  <br>System search comments by workitem identifier  <br>System returns comments 
     * @param {String} id WorkItem internal (guid format) or  global(integer format) identifier\"
     * @param {module:api/WorkItemsCommentsApi~apiV2WorkItemsIdCommentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/WorkItemCommentModel>}
     */
    apiV2WorkItemsIdCommentsGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiV2WorkItemsIdCommentsGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer or PrivateToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [WorkItemCommentModel];
      return this.apiClient.callApi(
        '/api/v2/workItems/{id}/comments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
