/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.testit_api_client);
  }
}(this, function(expect, testit_api_client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new testit_api_client.TestRunsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TestRunsApi', function() {
    describe('apiV2TestRunsIdTestPointsResultsGet', function() {
      it('should call apiV2TestRunsIdTestPointsResultsGet successfully', function(done) {
        //uncomment below and update the code to test apiV2TestRunsIdTestPointsResultsGet
        //instance.apiV2TestRunsIdTestPointsResultsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2TestRunsIdTestResultsLastModifiedModificationDateGet', function() {
      it('should call apiV2TestRunsIdTestResultsLastModifiedModificationDateGet successfully', function(done) {
        //uncomment below and update the code to test apiV2TestRunsIdTestResultsLastModifiedModificationDateGet
        //instance.apiV2TestRunsIdTestResultsLastModifiedModificationDateGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('completeTestRun', function() {
      it('should call completeTestRun successfully', function(done) {
        //uncomment below and update the code to test completeTestRun
        //instance.completeTestRun(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAndFillByAutoTests', function() {
      it('should call createAndFillByAutoTests successfully', function(done) {
        //uncomment below and update the code to test createAndFillByAutoTests
        //instance.createAndFillByAutoTests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAndFillByConfigurations', function() {
      it('should call createAndFillByConfigurations successfully', function(done) {
        //uncomment below and update the code to test createAndFillByConfigurations
        //instance.createAndFillByConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAndFillByWorkItems', function() {
      it('should call createAndFillByWorkItems successfully', function(done) {
        //uncomment below and update the code to test createAndFillByWorkItems
        //instance.createAndFillByWorkItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEmpty', function() {
      it('should call createEmpty successfully', function(done) {
        //uncomment below and update the code to test createEmpty
        //instance.createEmpty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTestRunById', function() {
      it('should call getTestRunById successfully', function(done) {
        //uncomment below and update the code to test getTestRunById
        //instance.getTestRunById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setAutoTestResultsForTestRun', function() {
      it('should call setAutoTestResultsForTestRun successfully', function(done) {
        //uncomment below and update the code to test setAutoTestResultsForTestRun
        //instance.setAutoTestResultsForTestRun(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startTestRun', function() {
      it('should call startTestRun successfully', function(done) {
        //uncomment below and update the code to test startTestRun
        //instance.startTestRun(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('stopTestRun', function() {
      it('should call stopTestRun successfully', function(done) {
        //uncomment below and update the code to test stopTestRun
        //instance.stopTestRun(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEmpty', function() {
      it('should call updateEmpty successfully', function(done) {
        //uncomment below and update the code to test updateEmpty
        //instance.updateEmpty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
