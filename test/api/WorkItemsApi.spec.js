/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.testit_api_client);
  }
}(this, function(expect, testit_api_client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new testit_api_client.WorkItemsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WorkItemsApi', function() {
    describe('apiV2WorkItemsIdActualPost', function() {
      it('should call apiV2WorkItemsIdActualPost successfully', function(done) {
        //uncomment below and update the code to test apiV2WorkItemsIdActualPost
        //instance.apiV2WorkItemsIdActualPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2WorkItemsIdCheckListTransformToTestCasePost', function() {
      it('should call apiV2WorkItemsIdCheckListTransformToTestCasePost successfully', function(done) {
        //uncomment below and update the code to test apiV2WorkItemsIdCheckListTransformToTestCasePost
        //instance.apiV2WorkItemsIdCheckListTransformToTestCasePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2WorkItemsIdHistoryGet', function() {
      it('should call apiV2WorkItemsIdHistoryGet successfully', function(done) {
        //uncomment below and update the code to test apiV2WorkItemsIdHistoryGet
        //instance.apiV2WorkItemsIdHistoryGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2WorkItemsIdLikeDelete', function() {
      it('should call apiV2WorkItemsIdLikeDelete successfully', function(done) {
        //uncomment below and update the code to test apiV2WorkItemsIdLikeDelete
        //instance.apiV2WorkItemsIdLikeDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2WorkItemsIdLikePost', function() {
      it('should call apiV2WorkItemsIdLikePost successfully', function(done) {
        //uncomment below and update the code to test apiV2WorkItemsIdLikePost
        //instance.apiV2WorkItemsIdLikePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2WorkItemsIdLikesCountGet', function() {
      it('should call apiV2WorkItemsIdLikesCountGet successfully', function(done) {
        //uncomment below and update the code to test apiV2WorkItemsIdLikesCountGet
        //instance.apiV2WorkItemsIdLikesCountGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2WorkItemsIdLikesGet', function() {
      it('should call apiV2WorkItemsIdLikesGet successfully', function(done) {
        //uncomment below and update the code to test apiV2WorkItemsIdLikesGet
        //instance.apiV2WorkItemsIdLikesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2WorkItemsIdTestResultsHistoryGet', function() {
      it('should call apiV2WorkItemsIdTestResultsHistoryGet successfully', function(done) {
        //uncomment below and update the code to test apiV2WorkItemsIdTestResultsHistoryGet
        //instance.apiV2WorkItemsIdTestResultsHistoryGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2WorkItemsMovePost', function() {
      it('should call apiV2WorkItemsMovePost successfully', function(done) {
        //uncomment below and update the code to test apiV2WorkItemsMovePost
        //instance.apiV2WorkItemsMovePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2WorkItemsSharedStepsSharedStepIdReferencesGet', function() {
      it('should call apiV2WorkItemsSharedStepsSharedStepIdReferencesGet successfully', function(done) {
        //uncomment below and update the code to test apiV2WorkItemsSharedStepsSharedStepIdReferencesGet
        //instance.apiV2WorkItemsSharedStepsSharedStepIdReferencesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createWorkItem', function() {
      it('should call createWorkItem successfully', function(done) {
        //uncomment below and update the code to test createWorkItem
        //instance.createWorkItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAllWorkItemsFromAutoTest', function() {
      it('should call deleteAllWorkItemsFromAutoTest successfully', function(done) {
        //uncomment below and update the code to test deleteAllWorkItemsFromAutoTest
        //instance.deleteAllWorkItemsFromAutoTest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWorkItem', function() {
      it('should call deleteWorkItem successfully', function(done) {
        //uncomment below and update the code to test deleteWorkItem
        //instance.deleteWorkItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAutoTestsForWorkItem', function() {
      it('should call getAutoTestsForWorkItem successfully', function(done) {
        //uncomment below and update the code to test getAutoTestsForWorkItem
        //instance.getAutoTestsForWorkItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getIterations', function() {
      it('should call getIterations successfully', function(done) {
        //uncomment below and update the code to test getIterations
        //instance.getIterations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWorkItemById', function() {
      it('should call getWorkItemById successfully', function(done) {
        //uncomment below and update the code to test getWorkItemById
        //instance.getWorkItemById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWorkItemChronology', function() {
      it('should call getWorkItemChronology successfully', function(done) {
        //uncomment below and update the code to test getWorkItemChronology
        //instance.getWorkItemChronology(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWorkItemVersions', function() {
      it('should call getWorkItemVersions successfully', function(done) {
        //uncomment below and update the code to test getWorkItemVersions
        //instance.getWorkItemVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWorkItem', function() {
      it('should call updateWorkItem successfully', function(done) {
        //uncomment below and update the code to test updateWorkItem
        //instance.updateWorkItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
