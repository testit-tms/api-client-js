/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.testit_api_client);
  }
}(this, function(expect, testit_api_client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new testit_api_client.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('apiV2ProjectsIdCustomAttributeTemplatesTemplateIdDelete', function() {
      it('should call apiV2ProjectsIdCustomAttributeTemplatesTemplateIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiV2ProjectsIdCustomAttributeTemplatesTemplateIdDelete
        //instance.apiV2ProjectsIdCustomAttributeTemplatesTemplateIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2ProjectsIdCustomAttributeTemplatesTemplateIdPost', function() {
      it('should call apiV2ProjectsIdCustomAttributeTemplatesTemplateIdPost successfully', function(done) {
        //uncomment below and update the code to test apiV2ProjectsIdCustomAttributeTemplatesTemplateIdPost
        //instance.apiV2ProjectsIdCustomAttributeTemplatesTemplateIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2ProjectsIdFailureClassesGet', function() {
      it('should call apiV2ProjectsIdFailureClassesGet successfully', function(done) {
        //uncomment below and update the code to test apiV2ProjectsIdFailureClassesGet
        //instance.apiV2ProjectsIdFailureClassesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2ProjectsIdFavoritePut', function() {
      it('should call apiV2ProjectsIdFavoritePut successfully', function(done) {
        //uncomment below and update the code to test apiV2ProjectsIdFavoritePut
        //instance.apiV2ProjectsIdFavoritePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2ProjectsIdFiltersGet', function() {
      it('should call apiV2ProjectsIdFiltersGet successfully', function(done) {
        //uncomment below and update the code to test apiV2ProjectsIdFiltersGet
        //instance.apiV2ProjectsIdFiltersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2ProjectsIdTestPlansAnalyticsGet', function() {
      it('should call apiV2ProjectsIdTestPlansAnalyticsGet successfully', function(done) {
        //uncomment below and update the code to test apiV2ProjectsIdTestPlansAnalyticsGet
        //instance.apiV2ProjectsIdTestPlansAnalyticsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2ProjectsIdTestPlansSearchPost', function() {
      it('should call apiV2ProjectsIdTestPlansSearchPost successfully', function(done) {
        //uncomment below and update the code to test apiV2ProjectsIdTestPlansSearchPost
        //instance.apiV2ProjectsIdTestPlansSearchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2ProjectsIdTestRunsActiveGet', function() {
      it('should call apiV2ProjectsIdTestRunsActiveGet successfully', function(done) {
        //uncomment below and update the code to test apiV2ProjectsIdTestRunsActiveGet
        //instance.apiV2ProjectsIdTestRunsActiveGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2ProjectsIdTestRunsFullGet', function() {
      it('should call apiV2ProjectsIdTestRunsFullGet successfully', function(done) {
        //uncomment below and update the code to test apiV2ProjectsIdTestRunsFullGet
        //instance.apiV2ProjectsIdTestRunsFullGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2ProjectsIdWorkItemsTagsGet', function() {
      it('should call apiV2ProjectsIdWorkItemsTagsGet successfully', function(done) {
        //uncomment below and update the code to test apiV2ProjectsIdWorkItemsTagsGet
        //instance.apiV2ProjectsIdWorkItemsTagsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2ProjectsSearchPost', function() {
      it('should call apiV2ProjectsSearchPost successfully', function(done) {
        //uncomment below and update the code to test apiV2ProjectsSearchPost
        //instance.apiV2ProjectsSearchPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('callExport', function() {
      it('should call callExport successfully', function(done) {
        //uncomment below and update the code to test callExport
        //instance.callExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('callImport', function() {
      it('should call callImport successfully', function(done) {
        //uncomment below and update the code to test callImport
        //instance.callImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCustomAttributeTestPlanProjectRelations', function() {
      it('should call createCustomAttributeTestPlanProjectRelations successfully', function(done) {
        //uncomment below and update the code to test createCustomAttributeTestPlanProjectRelations
        //instance.createCustomAttributeTestPlanProjectRelations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProject', function() {
      it('should call createProject successfully', function(done) {
        //uncomment below and update the code to test createProject
        //instance.createProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProjectsAttribute', function() {
      it('should call createProjectsAttribute successfully', function(done) {
        //uncomment below and update the code to test createProjectsAttribute
        //instance.createProjectsAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCustomAttributeTestPlanProjectRelations', function() {
      it('should call deleteCustomAttributeTestPlanProjectRelations successfully', function(done) {
        //uncomment below and update the code to test deleteCustomAttributeTestPlanProjectRelations
        //instance.deleteCustomAttributeTestPlanProjectRelations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProject', function() {
      it('should call deleteProject successfully', function(done) {
        //uncomment below and update the code to test deleteProject
        //instance.deleteProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProjectAutoTests', function() {
      it('should call deleteProjectAutoTests successfully', function(done) {
        //uncomment below and update the code to test deleteProjectAutoTests
        //instance.deleteProjectAutoTests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProjectsAttribute', function() {
      it('should call deleteProjectsAttribute successfully', function(done) {
        //uncomment below and update the code to test deleteProjectsAttribute
        //instance.deleteProjectsAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportWithTestPlansAndConfigurations', function() {
      it('should call exportWithTestPlansAndConfigurations successfully', function(done) {
        //uncomment below and update the code to test exportWithTestPlansAndConfigurations
        //instance.exportWithTestPlansAndConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllProjects', function() {
      it('should call getAllProjects successfully', function(done) {
        //uncomment below and update the code to test getAllProjects
        //instance.getAllProjects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttributeByProjectId', function() {
      it('should call getAttributeByProjectId successfully', function(done) {
        //uncomment below and update the code to test getAttributeByProjectId
        //instance.getAttributeByProjectId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttributesByProjectId', function() {
      it('should call getAttributesByProjectId successfully', function(done) {
        //uncomment below and update the code to test getAttributesByProjectId
        //instance.getAttributesByProjectId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAutoTestsNamespaces', function() {
      it('should call getAutoTestsNamespaces successfully', function(done) {
        //uncomment below and update the code to test getAutoTestsNamespaces
        //instance.getAutoTestsNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConfigurationsByProjectId', function() {
      it('should call getConfigurationsByProjectId successfully', function(done) {
        //uncomment below and update the code to test getConfigurationsByProjectId
        //instance.getConfigurationsByProjectId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCustomAttributeTestPlanProjectRelations', function() {
      it('should call getCustomAttributeTestPlanProjectRelations successfully', function(done) {
        //uncomment below and update the code to test getCustomAttributeTestPlanProjectRelations
        //instance.getCustomAttributeTestPlanProjectRelations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProjectById', function() {
      it('should call getProjectById successfully', function(done) {
        //uncomment below and update the code to test getProjectById
        //instance.getProjectById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSectionsByProjectId', function() {
      it('should call getSectionsByProjectId successfully', function(done) {
        //uncomment below and update the code to test getSectionsByProjectId
        //instance.getSectionsByProjectId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTestPlansByProjectId', function() {
      it('should call getTestPlansByProjectId successfully', function(done) {
        //uncomment below and update the code to test getTestPlansByProjectId
        //instance.getTestPlansByProjectId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTestRunsByProjectId', function() {
      it('should call getTestRunsByProjectId successfully', function(done) {
        //uncomment below and update the code to test getTestRunsByProjectId
        //instance.getTestRunsByProjectId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWorkItemsByProjectId', function() {
      it('should call getWorkItemsByProjectId successfully', function(done) {
        //uncomment below and update the code to test getWorkItemsByProjectId
        //instance.getWorkItemsByProjectId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importToExistingProject', function() {
      it('should call importToExistingProject successfully', function(done) {
        //uncomment below and update the code to test importToExistingProject
        //instance.importToExistingProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restoreProject', function() {
      it('should call restoreProject successfully', function(done) {
        //uncomment below and update the code to test restoreProject
        //instance.restoreProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCustomAttributeTestPlanProjectRelations', function() {
      it('should call updateCustomAttributeTestPlanProjectRelations successfully', function(done) {
        //uncomment below and update the code to test updateCustomAttributeTestPlanProjectRelations
        //instance.updateCustomAttributeTestPlanProjectRelations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProject', function() {
      it('should call updateProject successfully', function(done) {
        //uncomment below and update the code to test updateProject
        //instance.updateProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProjectsAttribute', function() {
      it('should call updateProjectsAttribute successfully', function(done) {
        //uncomment below and update the code to test updateProjectsAttribute
        //instance.updateProjectsAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
