/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.testit_api_client);
  }
}(this, function(expect, testit_api_client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new testit_api_client.AutoTestsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AutoTestsApi', function() {
    describe('apiV2AutoTestsFlakyBulkPost', function() {
      it('should call apiV2AutoTestsFlakyBulkPost successfully', function(done) {
        //uncomment below and update the code to test apiV2AutoTestsFlakyBulkPost
        //instance.apiV2AutoTestsFlakyBulkPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2AutoTestsIdWorkItemsChangedIdGet', function() {
      it('should call apiV2AutoTestsIdWorkItemsChangedIdGet successfully', function(done) {
        //uncomment below and update the code to test apiV2AutoTestsIdWorkItemsChangedIdGet
        //instance.apiV2AutoTestsIdWorkItemsChangedIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV2AutoTestsIdWorkItemsChangedWorkItemIdApprovePost', function() {
      it('should call apiV2AutoTestsIdWorkItemsChangedWorkItemIdApprovePost successfully', function(done) {
        //uncomment below and update the code to test apiV2AutoTestsIdWorkItemsChangedWorkItemIdApprovePost
        //instance.apiV2AutoTestsIdWorkItemsChangedWorkItemIdApprovePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAutoTest', function() {
      it('should call createAutoTest successfully', function(done) {
        //uncomment below and update the code to test createAutoTest
        //instance.createAutoTest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMultiple', function() {
      it('should call createMultiple successfully', function(done) {
        //uncomment below and update the code to test createMultiple
        //instance.createMultiple(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAutoTest', function() {
      it('should call deleteAutoTest successfully', function(done) {
        //uncomment below and update the code to test deleteAutoTest
        //instance.deleteAutoTest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAutoTestLinkFromWorkItem', function() {
      it('should call deleteAutoTestLinkFromWorkItem successfully', function(done) {
        //uncomment below and update the code to test deleteAutoTestLinkFromWorkItem
        //instance.deleteAutoTestLinkFromWorkItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllAutoTests', function() {
      it('should call getAllAutoTests successfully', function(done) {
        //uncomment below and update the code to test getAllAutoTests
        //instance.getAllAutoTests(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAutoTestAverageDuration', function() {
      it('should call getAutoTestAverageDuration successfully', function(done) {
        //uncomment below and update the code to test getAutoTestAverageDuration
        //instance.getAutoTestAverageDuration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAutoTestById', function() {
      it('should call getAutoTestById successfully', function(done) {
        //uncomment below and update the code to test getAutoTestById
        //instance.getAutoTestById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAutoTestChronology', function() {
      it('should call getAutoTestChronology successfully', function(done) {
        //uncomment below and update the code to test getAutoTestChronology
        //instance.getAutoTestChronology(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTestRuns', function() {
      it('should call getTestRuns successfully', function(done) {
        //uncomment below and update the code to test getTestRuns
        //instance.getTestRuns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWorkItemResults', function() {
      it('should call getWorkItemResults successfully', function(done) {
        //uncomment below and update the code to test getWorkItemResults
        //instance.getWorkItemResults(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWorkItemsLinkedToAutoTest', function() {
      it('should call getWorkItemsLinkedToAutoTest successfully', function(done) {
        //uncomment below and update the code to test getWorkItemsLinkedToAutoTest
        //instance.getWorkItemsLinkedToAutoTest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('linkAutoTestToWorkItem', function() {
      it('should call linkAutoTestToWorkItem successfully', function(done) {
        //uncomment below and update the code to test linkAutoTestToWorkItem
        //instance.linkAutoTestToWorkItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAutoTest', function() {
      it('should call updateAutoTest successfully', function(done) {
        //uncomment below and update the code to test updateAutoTest
        //instance.updateAutoTest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMultiple', function() {
      it('should call updateMultiple successfully', function(done) {
        //uncomment below and update the code to test updateMultiple
        //instance.updateMultiple(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
