/**
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.testit_api_client);
  }
}(this, function(expect, testit_api_client) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new testit_api_client.NotificationModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NotificationModel', function() {
    it('should create an instance of NotificationModel', function() {
      // uncomment below and update the code to test NotificationModel
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be.a(testit_api_client.NotificationModel);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

    it('should have the property createdDate (base name: "createdDate")', function() {
      // uncomment below and update the code to test the property createdDate
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

    it('should have the property isRead (base name: "isRead")', function() {
      // uncomment below and update the code to test the property isRead
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

    it('should have the property entityId (base name: "entityId")', function() {
      // uncomment below and update the code to test the property entityId
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

    it('should have the property notificationType (base name: "notificationType")', function() {
      // uncomment below and update the code to test the property notificationType
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

    it('should have the property projectGlobalId (base name: "projectGlobalId")', function() {
      // uncomment below and update the code to test the property projectGlobalId
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

    it('should have the property projectName (base name: "projectName")', function() {
      // uncomment below and update the code to test the property projectName
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

    it('should have the property testPlanGlobalId (base name: "testPlanGlobalId")', function() {
      // uncomment below and update the code to test the property testPlanGlobalId
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

    it('should have the property testPlanName (base name: "testPlanName")', function() {
      // uncomment below and update the code to test the property testPlanName
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

    it('should have the property workitemGlobalId (base name: "workitemGlobalId")', function() {
      // uncomment below and update the code to test the property workitemGlobalId
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

    it('should have the property workItemName (base name: "workItemName")', function() {
      // uncomment below and update the code to test the property workItemName
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

    it('should have the property attributeName (base name: "attributeName")', function() {
      // uncomment below and update the code to test the property attributeName
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

    it('should have the property createdById (base name: "createdById")', function() {
      // uncomment below and update the code to test the property createdById
      //var instance = new testit_api_client.NotificationModel();
      //expect(instance).to.be();
    });

  });

}));
